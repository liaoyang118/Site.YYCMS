//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Site.Service.UploadService.UploadService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://service.jsonyang.com", ConfigurationName="UploadService.IUploadService")]
    public interface IUploadService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://service.jsonyang.com/IUploadService/UploadImg", ReplyAction="http://service.jsonyang.com/IUploadService/UploadImgResponse")]
        System.Collections.Generic.List<string> UploadImg(byte[] imgDatas, string configName, System.Collections.Generic.List<string> sizeConfig, string imgExt, string thumbModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://service.jsonyang.com/IUploadService/UploadImg", ReplyAction="http://service.jsonyang.com/IUploadService/UploadImgResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<string>> UploadImgAsync(byte[] imgDatas, string configName, System.Collections.Generic.List<string> sizeConfig, string imgExt, string thumbModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://service.jsonyang.com/IUploadService/UploadVideo", ReplyAction="http://service.jsonyang.com/IUploadService/UploadVideoResponse")]
        System.Collections.Generic.List<string> UploadVideo(byte[] videoDatas, string configName, System.Collections.Generic.List<string> sizeConfig, string videoExt, string thumbModel, int totalSecond);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://service.jsonyang.com/IUploadService/UploadVideo", ReplyAction="http://service.jsonyang.com/IUploadService/UploadVideoResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<string>> UploadVideoAsync(byte[] videoDatas, string configName, System.Collections.Generic.List<string> sizeConfig, string videoExt, string thumbModel, int totalSecond);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUploadServiceChannel : Site.Service.UploadService.UploadService.IUploadService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UploadServiceClient : System.ServiceModel.ClientBase<Site.Service.UploadService.UploadService.IUploadService>, Site.Service.UploadService.UploadService.IUploadService {
        
        public UploadServiceClient() {
        }
        
        public UploadServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UploadServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UploadServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UploadServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<string> UploadImg(byte[] imgDatas, string configName, System.Collections.Generic.List<string> sizeConfig, string imgExt, string thumbModel) {
            return base.Channel.UploadImg(imgDatas, configName, sizeConfig, imgExt, thumbModel);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<string>> UploadImgAsync(byte[] imgDatas, string configName, System.Collections.Generic.List<string> sizeConfig, string imgExt, string thumbModel) {
            return base.Channel.UploadImgAsync(imgDatas, configName, sizeConfig, imgExt, thumbModel);
        }
        
        public System.Collections.Generic.List<string> UploadVideo(byte[] videoDatas, string configName, System.Collections.Generic.List<string> sizeConfig, string videoExt, string thumbModel, int totalSecond) {
            return base.Channel.UploadVideo(videoDatas, configName, sizeConfig, videoExt, thumbModel, totalSecond);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<string>> UploadVideoAsync(byte[] videoDatas, string configName, System.Collections.Generic.List<string> sizeConfig, string videoExt, string thumbModel, int totalSecond) {
            return base.Channel.UploadVideoAsync(videoDatas, configName, sizeConfig, videoExt, thumbModel, totalSecond);
        }
    }
}
